# Environment variables for the server in selfhost mode.
# This file is loaded at runtime by the server container.

# --- Environment ---
ENVIRONMENT=selfhost

# --- Self-Host Authentication ---
# This MUST match the `SELF_HOST_AUTH_TOKEN` in the client's .env.selfhost file.
SELF_HOST_AUTH_SECRET=<use_the_same_strong_secret_as_in_the_root_env>

# --- Auth0 Dummy Configuration (Permissions are still derived from this scope) ---
AUTH0_SCOPE='openid profile email offline_access read:profile write:profile read:tasks write:tasks read:notifications read:config write:config admin:user_metadata read:contacts write:contacts'
# Other Auth0 variables are not needed.

# --- LinkedIn Scraper Credentials (Optional) ---
# Required for the onboarding LinkedIn profile import feature.
LINKEDIN_COOKIE=<your_linkedin_cookie>

# --- Database (points to the Docker service) ---
MONGO_URI=mongodb://${MONGO_USER}:${MONGO_PASS}@mongodb:27017/
MONGO_DB_NAME=sentient_selfhost_db

# --- Task Queue (Celery, points to the Docker service) ---
CELERY_BROKER_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD}@redis:6379/0

# --- LLM Provider Configuration ---
# Standard OpenAI API compatible endpoint configuration.
# For local Ollama, use the following. The Docker container will run Ollama internally.
OPENAI_API_BASE_URL=http://localhost:11434
OPENAI_MODEL_NAME=qwen3:4b
OPENAI_API_KEY=ollama

# --- 3rd Party API Keys (Optional but recommended for full functionality) ---
POSTHOG_KEY=<your_posthog_project_api_key>
POSTHOG_HOST=<your_posthog_host>
NEWS_API_KEY=<your-news-api-key>
GOOGLE_CLIENT_ID=
GOOGLE_PROJECT_ID=
GOOGLE_CLIENT_SECRET=
GOOGLE_API_KEY=<your-google-cloud-api-key>
GOOGLE_CSE_ID=<your-google-custom-search-engine-id>
UNSPLASH_ACCESS_KEY=<your-unsplash-access-key>
SLACK_CLIENT_ID=<your-slack-oauth-app-client-id>
SLACK_CLIENT_SECRET=<your-slack-oauth-app-client-secret>
NOTION_CLIENT_ID=<your-notion-oauth-app-client-id>
NOTION_CLIENT_SECRET=<your-notion-oauth-app-client-secret>
GITHUB_CLIENT_ID=<your-github-oauth-app-client-id>
GITHUB_CLIENT_SECRET=<your-github-oauth-app-client-secret>
GEMINI_API_KEY=<your-gemini-api-key>
ACCUWEATHER_API_KEY=<your-accuweather-api-key>

# --- Encryption ---
AES_SECRET_KEY=<generate_a_64_char_hex_string>
AES_IV=<generate_a_32_char_hex_string>

# --- MCP Hub Internal URLs (for services running inside the container via supervisord) ---
GMAIL_MCP_SERVER_URL=http://localhost:9001/sse/
GCAL_MCP_SERVER_URL=http://localhost:9002/sse/
GDRIVE_MCP_SERVER_URL=http://localhost:9003/sse/
GDOCS_MCP_SERVER_URL=http://localhost:9004/sse/
GOOGLE_SEARCH_MCP_SERVER_URL=http://localhost:9005/sse/
SLACK_MCP_SERVER_URL=http://localhost:9006/sse/
ACCUWEATHER_MCP_SERVER_URL=http://localhost:9007/sse/
QUICKCHART_MCP_SERVER_URL=http://localhost:9008/sse/
NOTION_MCP_SERVER_URL=http://localhost:9009/sse/
GITHUB_MCP_SERVER_URL=http://localhost:9010/sse/
PROGRESS_UPDATER_MCP_SERVER_URL=http://localhost:9011/sse/
NEWS_MCP_SERVER_URL=http://localhost:9012/sse/
GSLIDES_MCP_SERVER_URL=http://localhost:9014/sse/
GSHEETS_MCP_SERVER_URL=http://localhost:9015/sse/
GMAPS_MCP_SERVER_URL=http://localhost:9016/sse/
GSHOPPING_MCP_SERVER_URL=http://localhost:9017/sse/
TASKS_MCP_SERVER_URL=http://localhost:9018/sse/
GPEOPLE_MCP_SERVER_URL=http://localhost:9019/sse/
PROJECT_MCP_SERVER_URL=http://localhost:9020/sse/
# Supermemory is an external service, user can point to it if they want.
SUPERMEMORY_MCP_BASE_URL=https://mcp.supermemory.ai/
SUPERMEMORY_MCP_ENDPOINT_SUFFIX=/sse

