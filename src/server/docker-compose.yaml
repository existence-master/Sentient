# src/server/docker-compose.yaml
# This docker-compose file is for deploying the application server on a dedicated Server VM.
# It should connect to databases running on a separate Database VM.

services:
    # 1. The Main Sentient Application (FastAPI, Nginx, Celery, MCPs)
    sentient-app:
        build:
            context: .
            dockerfile: Dockerfile
            # Pass variables from the .env file as build arguments for conditional builds
            args:
                - OPENAI_API_KEY=${OPENAI_API_KEY}
                - OPENAI_MODEL_NAME=${OPENAI_MODEL_NAME}
        container_name: sentient-app
        restart: unless-stopped
        env_file:
            - ./.env
        ports:
            # Exposes Nginx (running on port 80 in the container) to port 5000 on the host.
            # This is the primary public-facing port for your entire application.
            - "5000:80"
        depends_on:
            - waha
            - litellm
        networks:
            - sentient_network

    # 2. WAHA (WhatsApp HTTP API) Service
    waha:
        image: itsskofficial/waha-multisession
        container_name: waha-notifier
        restart: unless-stopped
        volumes:
            # Use a named volume for persistent WhatsApp session data
            - waha-sessions:/app/.sessions
        networks:
            - sentient_network
        env_file:
            - ./.env
        ports:
            - "8000:3000"

    # 3. LiteLLM Proxy for Gemini Models
    litellm:
        image: ghcr.io/berriai/litellm:main-latest  # Use the latest stable image
        container_name: litellm-proxy
        restart: unless-stopped
        networks:
        - sentient_network  # Join the shared network for internal access
        volumes:
        - ./litellm-config.yaml:/app/config.yaml:ro  # Mount your config (create in src\server if needed)
        command: ["--config", "/app/config.yaml", "--port", "4000"]  # Run with config; optional: add "--detailed_debug"
        env_file:
        - ./.env  # Loads GEMINI_API_KEY and others

# Defines the shared network for all services
networks:
    sentient_network:
        driver: bridge

# Defines the named volumes for data persistence
volumes:
    waha-sessions: