# ===================================================================
# HTTP Server Block (Port 80)
# - Handles Let's Encrypt certificate renewal
# - Redirects all other HTTP traffic to HTTPS for security
# ===================================================================
server {
    if ($host = <YOUR_DOMAIN>) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80;
    listen [::]:80;
    server_name <YOUR_DOMAIN>;

    # This allows Certbot to renew your SSL certificate
    location /.well-known/acme-challenge/ {
        root <WEB_ROOT_PATH>;
    }

    # For all other traffic, enforce HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# ===================================================================
# HTTPS Server Block (Port 443)
# - Handles all secure application traffic
# - Proxies requests to your Next.js container
# - Now supports quick toggle to maintenance page
# ===================================================================
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name <YOUR_DOMAIN>;

    # --- SSL Certificate Paths (Managed by Certbot) ---
    ssl_certificate <SSL_CERT_PATH>; # managed by Certbot
    ssl_certificate_key <SSL_CERT_KEY_PATH>; # managed by Certbot

    # --- SSL Hardening ---
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;

    # --- Maintenance Mode Check ---
    # If <WEB_ROOT_PATH>/maintenance.flag exists, return 503
    if (-f <WEB_ROOT_PATH>/maintenance.flag) {
        return 503;
    }

    # --- Main Application Proxy ---
    location / {
        proxy_pass http://localhost:<APP_PORT>;
        
        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket Headers (CRITICAL for wss:// to work)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # --- Timeout Increases ---
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # --- Buffer Increases ---
        proxy_buffers 16 16k;
        proxy_buffer_size 32k;
    }

    # --- Maintenance Page Handling ---
    error_page 503 @maintenance;

    location @maintenance {
        root <WEB_ROOT_PATH>;
        rewrite ^(.*)$ /maintenance.html break;
    }
}